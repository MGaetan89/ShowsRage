apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'jacoco-android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

def properties = new Properties()

if (rootProject.file('local.properties').exists()) {
	properties.load(rootProject.file('local.properties').newDataInputStream())
}

android {
	compileSdkVersion 27
	buildToolsVersion '27.0.3'

	defaultConfig {
		applicationId 'com.mgaetan89.showsrage'
		minSdkVersion 15
		targetSdkVersion 27
		versionCode 35
		versionName '1.6.1'
		resConfigs 'en', 'fr'
		testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
		vectorDrawables.useSupportLibrary = true
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}

	signingConfigs {
		release {
			keyAlias properties.getProperty('signing.keyAlias', '')
			keyPassword properties.getProperty('signing.keyPassword', '')
			storeFile file(properties.getProperty('signing.storeFile', '-'))
			storePassword properties.getProperty('signing.storePassword', '')
		}
	}

	buildTypes {
		debug {
			applicationIdSuffix '.dev'
			testCoverageEnabled true
		}

		release {
			minifyEnabled false

			if (file(signingConfigs.release.storeFile).exists()) {
				signingConfig signingConfigs.release
			}
		}
	}

	sourceSets {
		androidTest.java.srcDirs = ['src/androidTest/kotlin']
		main.java.srcDirs = ['src/main/kotlin']
		test.java.srcDirs = ['src/test/kotlin']
	}

	dexOptions {
		preDexLibraries = false
	}

	lintOptions {
		abortOnError false
	}

	testOptions {
		unitTests {
			returnDefaultValues = true
		}
	}
}

def assertJAndroidVersion = '1.2.0'
def googleServicesVersion = '11.4.2'
def jUnitVersion = '4.12'
def okHttpVersion = '2.5.0'
def supportLibraryVersion = '27.1.1'
def supportTestVersion = '1.0.1'

dependencies {
	implementation "com.android.support:appcompat-v7:${supportLibraryVersion}"
	implementation "com.android.support:cardview-v7:${supportLibraryVersion}"
	implementation "com.android.support:customtabs:${supportLibraryVersion}"
	implementation "com.android.support:design:${supportLibraryVersion}"
	implementation "com.android.support:mediarouter-v7:${supportLibraryVersion}"
	implementation "com.android.support:palette-v7:${supportLibraryVersion}"
	implementation "com.android.support:recyclerview-v7:${supportLibraryVersion}"
	implementation "com.android.support:support-annotations:${supportLibraryVersion}"
	implementation "com.android.support:support-v4:${supportLibraryVersion}"
	implementation "com.android.support:support-vector-drawable:${supportLibraryVersion}"
	implementation 'com.crashlytics.sdk.android:crashlytics:2.9.2'
	implementation 'com.firebase:firebase-jobdispatcher:0.8.5'
	implementation 'com.futuremind.recyclerfastscroll:fastscroll:0.2.5'
	implementation 'com.github.bumptech.glide:glide:3.8.0'
	implementation 'com.github.bumptech.glide:okhttp-integration:1.5.0'
	implementation "com.google.android.gms:play-services-cast:${googleServicesVersion}"
	implementation "com.google.firebase:firebase-analytics:${googleServicesVersion}"
	implementation "com.squareup.okhttp:okhttp:${okHttpVersion}"
	implementation "com.squareup.okhttp:okhttp-urlconnection:${okHttpVersion}"
	implementation 'com.squareup.retrofit:retrofit:1.9.0'
	implementation 'com.takisoft.fix:preference-v7:27.1.1.0'
	implementation 'io.realm:android-adapters:2.1.0'
	implementation 'jp.wasabeef:glide-transformations:2.0.2'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.2.41'

	testImplementation("com.squareup.assertj:assertj-android:${assertJAndroidVersion}") {
		exclude group: 'com.android.support', module: 'support-annotations'
	}
	testImplementation "junit:junit:${jUnitVersion}"
	testImplementation 'org.mockito:mockito-core:2.15.0'

	androidTestImplementation "com.android.support:support-annotations:${supportLibraryVersion}"
	androidTestImplementation "com.android.support.test:rules:${supportTestVersion}"
	androidTestImplementation "com.android.support.test:runner:${supportTestVersion}"
	androidTestImplementation("com.squareup.assertj:assertj-android:${assertJAndroidVersion}") {
		exclude group: 'com.android.support', module: 'support-annotations'
	}
	androidTestImplementation "junit:junit:${jUnitVersion}"
}

apply plugin: 'com.google.gms.google-services'
