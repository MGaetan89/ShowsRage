apply plugin: 'com.android.application'
apply plugin: 'com.vanniktech.android.junit.jacoco'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

def properties = new Properties()

if (rootProject.file('local.properties').exists()) {
    properties.load(rootProject.file('local.properties').newDataInputStream())
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId 'com.mgaetan89.showsrage'
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 37
        versionName '1.7'
        resConfigs 'en', 'fr'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            keyAlias properties.getProperty('signing.keyAlias', '')
            keyPassword properties.getProperty('signing.keyPassword', '')
            storeFile file(properties.getProperty('signing.storeFile', '-'))
            storePassword properties.getProperty('signing.storePassword', '')
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            testCoverageEnabled true
        }

        release {
            minifyEnabled false

            if (file(signingConfigs.release.storeFile).exists()) {
                signingConfig signingConfigs.release
            }
        }
    }

    sourceSets {
        androidTest.java.srcDirs = ['src/androidTest/kotlin']
        main.java.srcDirs = ['src/main/kotlin']
        test.java.srcDirs = ['src/test/kotlin']
    }

    dexOptions {
        preDexLibraries = false
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }
}

androidExtensions {
    experimental = true
}

junitJacoco {
    jacocoVersion = '0.8.1'
    includeNoLocationClasses = true
}

realm {
    kotlinExtensionsEnabled = false
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat 'full'
    }
}

def assertJAndroidVersion = '1.2.0'
def glideVersion = '4.7.1'
def jUnitVersion = '4.12'
def okHttpVersion = '2.7.5'
def supportLibraryVersion = '27.1.1'
def supportTestVersion = '1.0.1'

dependencies {
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:customtabs:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:mediarouter-v7:$supportLibraryVersion"
    implementation "com.android.support:palette-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:support-annotations:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$supportLibraryVersion"
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.4'
    implementation 'com.firebase:firebase-jobdispatcher:0.8.5'
    implementation 'com.futuremind.recyclerfastscroll:fastscroll:0.2.5'
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.github.bumptech.glide:okhttp-integration:$glideVersion"
    implementation 'com.google.android.gms:play-services-cast:15.0.1'
    implementation 'com.google.firebase:firebase-analytics:16.0.1'
    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation "com.squareup.okhttp:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp:okhttp-urlconnection:$okHttpVersion"
    implementation 'com.squareup.retrofit:retrofit:1.9.0'
    implementation 'com.takisoft.fix:preference-v7:27.1.1.0'
    implementation 'io.realm:android-adapters:3.0.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.2.50'

    testImplementation("com.squareup.assertj:assertj-android:$assertJAndroidVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation 'org.mockito:mockito-core:2.19.0'

    androidTestImplementation "com.android.support:support-annotations:$supportLibraryVersion"
    androidTestImplementation "com.android.support.test:rules:$supportTestVersion"
    androidTestImplementation "com.android.support.test:runner:$supportTestVersion"
    androidTestImplementation("com.squareup.assertj:assertj-android:$assertJAndroidVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation "junit:junit:$jUnitVersion"
}

apply plugin: 'com.google.gms.google-services'
